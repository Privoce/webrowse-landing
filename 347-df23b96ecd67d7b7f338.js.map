{"version":3,"file":"347-df23b96ecd67d7b7f338.js","mappings":"qOAKe,SAASA,EAAT,GAAmF,IAAD,IAAzDC,QAAAA,OAAyD,MAA/C,KAA+C,EAAzCC,EAAyC,EAAzCA,KAAyC,IAAnCC,IAAAA,OAAmC,MAA7B,0BAA6B,EAC7F,GAAsCC,EAAAA,EAAAA,WAAS,GAAxCC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAlCG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAA1CK,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACNH,EAAYN,KACb,CAACA,IACJ,IAAMU,EAAe,mCAAG,WAAOC,GAAP,uFACCA,EAAWC,iBADZ,OAChBP,EADgB,OAEpBQ,QAAQC,IAAI,CAAET,SAAAA,IAEVA,IACAG,GAAgB,GAChBF,EAAYD,IANI,2CAAH,sDASfU,EAAgB,mCAAG,WAAOf,GAAP,iEACrBa,QAAQC,IAAI,QAAS,CAAEd,KAAAA,IACvBM,EAAYN,GACZQ,GAAgB,GAHK,2CAAH,sDAYhBQ,EAAc,mCAAG,+FACdX,EADc,uBAEfG,GAAgB,GAFD,6BAKdT,EALc,wDAMXkB,EAAwBZ,EAAxBY,GAAIC,EAAoBb,EAApBa,SAAUC,EAAUd,EAAVc,MACtBf,GAAe,GAPI,SAQAgB,MAAM,4CAA6C,CAClEC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB1B,QAASA,EACTC,KAAM,CACFiB,GAAAA,EAAIC,SAAAA,EAAUC,MAAAA,OAhBP,cAQbO,EARa,iBAoBAA,EAAKC,OApBL,QAoBbC,EApBa,OAqBnBxB,GAAe,GACXwB,GAAQA,EAAKC,cACbC,SAASC,KAAOH,EAAKC,aAvBN,4CAAH,qDA2BpB,OACI,gCACI,gBAAC,EAAAG,aAAD,CACIC,QAAS1B,EACT2B,wBAnCc,SAAClC,GACvBM,EAAYN,GACZQ,GAAgB,IAmCR2B,QAxCa,WACrB3B,GAAgB,IAwCR4B,QAASrB,EACTsB,OAAQ3B,EACR4B,MAAOA,EAAAA,GACPC,OAAQC,EAAAA,KAEZ,0BAAQC,SAAUtC,EAAauC,UAAU,MAAMC,QAAS3B,GAAiBb,EAAc,aAAeF","sources":["webpack://webrowse-landing/./src/components/PaymentButton/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AuthingGuard } from '@authing/react-ui-components'\n// 引入 css 文件\nimport '@authing/react-ui-components/lib/index.min.css';\nimport GuardConfig, { appId } from '../../constants/guardConfig';\nexport default function PaymentButton({ priceId = null, user, txt = \"Start 14-day free trial\" }) {\n    const [subCreating, setSubCreating] = useState(false)\n    const [currUser, setCurrUser] = useState(null);\n    const [guardVisible, setGuardVisible] = useState(false)\n    useEffect(() => {\n        setCurrUser(user)\n    }, [user]);\n    const handleGuardLoad = async (authClient) => {\n        let currUser = await authClient.getCurrentUser();\n        console.log({ currUser });\n        // const { userInfo, session } = authingResp;\n        if (currUser) {\n            setGuardVisible(false);\n            setCurrUser(currUser);\n        }\n    };\n    const handleGuardLogin = async (user) => {\n        console.log('login', { user });\n        setCurrUser(user);\n        setGuardVisible(false);\n    };\n    const handleGuardClose = () => {\n        setGuardVisible(false);\n    };\n    const handleRegComplete = (user) => {\n        setCurrUser(user);\n        setGuardVisible(false);\n    };\n    const handlePayClick = async () => {\n        if (!currUser) {\n            setGuardVisible(true)\n            return\n        }\n        if (!priceId) return;\n        const { id, username, email } = currUser;\n        setSubCreating(true)\n        const resp = await fetch('http://localhost:4000/subscription/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                priceId: priceId,\n                user: {\n                    id, username, email\n                }\n            }),\n        });\n        const data = await resp.json();\n        setSubCreating(false)\n        if (data && data.session_url) {\n            location.href = data.session_url\n        }\n        // console.log({ priceId });\n    }\n    return (\n        <>\n            <AuthingGuard\n                visible={guardVisible}\n                onRegisterInfoCompleted={handleRegComplete}\n                // onRegister={handleReg}\n                onClose={handleGuardClose}\n                onLogin={handleGuardLogin}\n                onLoad={handleGuardLoad}\n                appId={appId}\n                config={GuardConfig}\n            />\n            <button disabled={subCreating} className=\"btn\" onClick={handlePayClick}>{subCreating ? 'Initialing' : txt}</button>\n\n        </>\n    )\n}\n"],"names":["PaymentButton","priceId","user","txt","useState","subCreating","setSubCreating","currUser","setCurrUser","guardVisible","setGuardVisible","useEffect","handleGuardLoad","authClient","getCurrentUser","console","log","handleGuardLogin","handlePayClick","id","username","email","fetch","method","headers","body","JSON","stringify","resp","json","data","session_url","location","href","AuthingGuard","visible","onRegisterInfoCompleted","onClose","onLogin","onLoad","appId","config","GuardConfig","disabled","className","onClick"],"sourceRoot":""}